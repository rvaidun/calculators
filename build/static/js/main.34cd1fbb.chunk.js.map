{"version":3,"sources":["Components/MathRenderer.tsx","partial_derivative.tsx","Discriminant.tsx","derivative.tsx","TangentPlane.tsx","Taylor.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MathRenderer","props","className","mathformula","PartialDerivative","useState","textboxval","setTextBoxVal","latexval","setLatexVal","latexanswer","setLatexAnswer","respectToBoxVal","setrespectToBoxVal","type","value","placeholder","onChange","e","blockinline","target","parse","toTex","console","log","maxLength","onClick","data","calculator","mathequation","respectTo","fetch","method","headers","body","JSON","stringify","then","res","json","Discriminant","Accordion","AccordionSummary","expandIcon","aria-controls","id","discriminant","AccordionDetails","steps","map","l","text","latex","saddlepoints","number","min","max","Derivative","TangentPlane","xval","setxval","yval","setyval","point","answer","Taylor","orderval","setorder","order","App","path","exact","component","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34cd1fbb.chunk.js","sourcesContent":["// App.js\nimport React from \"react\";\nimport { parse } from \"mathjs\";\nimport { Node } from \"@nteract/mathjax\";\n\nconst MathRenderer = (props: any) => {\n  return (\n    <div>\n      <p className=\"mathrenderer\">\n        <Node>{props.mathformula}</Node>\n      </p>\n    </div>\n  );\n};\n\nexport default MathRenderer;\n","import { MouseEventHandler, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport MathRenderer from \"./Components/MathRenderer\";\nimport { parse } from \"mathjs\";\n\nfunction PartialDerivative() {\n  const [textboxval, setTextBoxVal] = useState(\"\");\n  const [latexval, setLatexVal] = useState(\"\");\n  const [latexanswer, setLatexAnswer] = useState(\"\");\n  const [respectToBoxVal, setrespectToBoxVal] = useState(\"\");\n\n  const eqchange = (e: any) => {\n    setTextBoxVal(e.target.value);\n    let blockinline: string;\n    try {\n      blockinline = parse(e.target.value).toTex();\n      console.log(blockinline);\n    } catch {\n      blockinline = parse(`Not a valid input`).toTex();\n    }\n    setLatexVal(blockinline);\n  };\n\n  const varchange = (e: any) => {\n    setrespectToBoxVal(e.target.value);\n    let blockinline: string;\n    try {\n      blockinline = parse(e.target.value).toTex();\n      console.log(blockinline);\n    } catch {\n      blockinline = parse(`Not a valid input`).toTex();\n    }\n  };\n\n  const sendMath = () => {\n    const data = {\n      calculator: \"partial_derivative\",\n      data: { mathequation: textboxval , respectTo: respectToBoxVal},\n\n    };\n    console.log(data);\n    fetch(\"/calculator\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLatexAnswer(data);\n        console.log(data);\n      });\n  };\n\n    return (\n      <div className=\"standard\">\n        <h3>Partial Derivative</h3>\n        <input type=\"text\" value={textboxval} placeholder=\"Equation\" onChange={eqchange} />\n        <input type=\"text\" value={respectToBoxVal} maxLength={1} onChange={varchange} className=\"smallerTextBox\" />\n        <button onClick={sendMath}>Go</button>\n        <MathRenderer mathformula={latexval}></MathRenderer>\n          <p>With respect to:</p>\n          <MathRenderer mathformula={respectToBoxVal}></MathRenderer>\n        <MathRenderer mathformula={latexanswer}></MathRenderer>\n      </div>\n    );\n}\n\nexport default PartialDerivative;\n","import { MouseEventHandler, useState } from \"react\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport \"./App.css\";\nimport MathRenderer from \"./Components/MathRenderer\";\nimport { parse } from \"mathjs\";\n\nfunction Discriminant() {\n  const [textboxval, setTextBoxVal] = useState(\"\");\n  const [latexval, setLatexVal] = useState(\"\");\n  const [latexanswer, setLatexAnswer] = useState(null);\n\n  const eqchange = (e: any) => {\n    setTextBoxVal(e.target.value);\n    let blockinline: string;\n    try {\n      blockinline = parse(e.target.value).toTex();\n      console.log(blockinline);\n    } catch {\n      blockinline = parse(`Not a valid input`).toTex();\n    }\n    setLatexVal(blockinline);\n  };\n\n  const sendMath = () => {\n    const data = {\n      calculator: \"discriminant\",\n      data: { mathequation: textboxval },\n    };\n    console.log(data);\n    fetch(\"/calculator\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLatexAnswer(data);\n        console.log(data);\n      });\n  };\n  return (\n    <div className=\"standard\">\n      <h3>Discriminant, Saddle Points, Local Minima and Local Maxima</h3>\n      <p>\n        The discriminant of the function f can be found using the following\n        equation\n      </p>\n      <MathRenderer mathformula=\"\\frac{d^{2}}{d x^{2}} f \\frac{d^{2}}{d y^{2}} f - \\left(\\frac{d^{2}}{d yd x} f\\right)^{2}\" />\n      <input type=\"text\" value={textboxval} placeholder=\"Equation\" onChange={eqchange} />\n      <button onClick={sendMath}>Go</button>\n      <MathRenderer\n        className=\"mathrenderer\"\n        mathformula={latexval}\n      ></MathRenderer>\n      {latexanswer !== null ? (\n        <>\n          <h1>Discriminent</h1>\n          <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <MathRenderer mathformula={latexanswer.discriminant} />\n            </AccordionSummary>\n\n            <AccordionDetails className=\"detailcenter\">\n              <ol>\n                {latexanswer.steps.discriminant.map((l) => (\n                  <>\n                    {\"text\" in l ? (\n                      <p>{l.text}</p>\n                    ) : (\n                      <MathRenderer mathformula={l.latex} />\n                    )}\n                  </>\n                ))}\n              </ol>\n            </AccordionDetails>\n          </Accordion>\n          <h1>Saddle Points</h1>\n          <ul>\n            {latexanswer.steps.saddlepoints.map((l) => (\n              <>\n                {\"text\" in l ? (\n                  <p>{l.text}</p>\n                ) : (\n                  <MathRenderer mathformula={l.latex} />\n                )}\n              </>\n            ))}\n            {latexanswer.saddlepoints.map((number) => (\n              <MathRenderer mathformula={number} />\n            ))}\n          </ul>\n          <h1>Local Minima</h1>\n          <ul>\n            {latexanswer.min.map((number) => (\n              <MathRenderer mathformula={number} />\n            ))}\n          </ul>\n          <h1>Local Maximum</h1>\n          <ul>\n            {latexanswer.max.map((number) => (\n              <MathRenderer mathformula={number} />\n            ))}\n          </ul>\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default Discriminant;\n","import { MouseEventHandler, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport MathRenderer from \"./Components/MathRenderer\";\nimport { parse } from \"mathjs\";\n\nfunction Derivative() {\n  const [textboxval, setTextBoxVal] = useState(\"\");\n  const [latexval, setLatexVal] = useState(\"\");\n  const [latexanswer, setLatexAnswer] = useState(\"\");\n\n  const eqchange = (e: any) => {\n    setTextBoxVal(e.target.value);\n    let blockinline: string;\n    try {\n      blockinline = parse(e.target.value).toTex();\n      console.log(blockinline);\n    } catch {\n      blockinline = parse(`Not a valid input`).toTex();\n    }\n    setLatexVal(blockinline);\n  };\n\n  const sendMath = () => {\n    const data = {\n      calculator: \"derivative\",\n      data: { mathequation: textboxval },\n    };\n    console.log(data);\n    fetch(\"/calculator\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLatexAnswer(data);\n        console.log(data);\n      });\n  };\n\n    return (\n      <div className=\"standard\">\n        <h3>Derivative</h3>\n        <input type=\"text\" value={textboxval} placeholder=\"Equation\" onChange={eqchange} />\n        <button onClick={sendMath}>Go</button>\n        <MathRenderer mathformula={latexval}></MathRenderer>\n        <MathRenderer mathformula={latexanswer}></MathRenderer>\n      </div>\n    );\n}\n\nexport default Derivative","import { MouseEventHandler, useState } from \"react\";\nimport \"./App.css\";\nimport MathRenderer from \"./Components/MathRenderer\";\nimport { parse } from \"mathjs\";\n\nfunction TangentPlane() {\n  const [textboxval, setTextBoxVal] = useState(\"\");\n  const [xval, setxval] = useState(\"\");\n  const [yval, setyval] = useState(\"\");\n  const [latexval, setLatexVal] = useState(\"\");\n  const [latexanswer, setLatexAnswer] = useState(null);\n\n  const eqchange = (e: any) => {\n    setTextBoxVal(e.target.value);\n    let blockinline: string;\n    try {\n      blockinline = parse(e.target.value).toTex();\n      console.log(blockinline);\n    } catch {\n      blockinline = parse(`Not a valid input`).toTex();\n    }\n    setLatexVal(blockinline);\n  };\n\n  const sendMath = () => {\n    const data = {\n      calculator: \"tangentplane\",\n      data: { mathequation: textboxval, point: [xval, yval] },\n    };\n    console.log(data);\n    fetch(\"/calculator\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLatexAnswer(data);\n        console.log(data);\n      });\n  };\n  return (\n    <div className=\"standard\">\n      <h3>Equation for a tangent plane</h3>\n      <input type=\"text\" value={textboxval} placeholder=\"Equation\" onChange={eqchange} />\n      <input\n        type=\"number\"\n        value={xval}\n        placeholder=\"X value\"\n        onChange={(e) => setxval(e.target.value)}\n      />\n      <input\n        type=\"number\"\n        value={yval}\n        placeholder=\"Y value\"\n        onChange={(e) => setyval(e.target.value)}\n      />\n      <button onClick={sendMath}>Go</button>\n      <MathRenderer mathformula={latexval}></MathRenderer>\n      {latexanswer !== null ? (\n        <>\n          <h1>Equation of the Tangent Plane</h1>\n          <MathRenderer mathformula={latexanswer.answer} />\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default TangentPlane;\n","import { MouseEventHandler, useState } from \"react\";\nimport \"./App.css\";\nimport MathRenderer from \"./Components/MathRenderer\";\nimport { parse } from \"mathjs\";\n\nfunction Taylor() {\n  const [textboxval, setTextBoxVal] = useState(\"\");\n  const [xval, setxval] = useState(\"\");\n  const [yval, setyval] = useState(\"\");\n  const [orderval, setorder] = useState(\"\");\n  const [latexval, setLatexVal] = useState(\"\");\n  const [latexanswer, setLatexAnswer] = useState(null);\n\n  const eqchange = (e: any) => {\n    setTextBoxVal(e.target.value);\n    let blockinline: string;\n    try {\n      blockinline = parse(e.target.value).toTex();\n      console.log(blockinline);\n    } catch {\n      blockinline = parse(`Not a valid input`).toTex();\n    }\n    setLatexVal(blockinline);\n  };\n\n  const sendMath = () => {\n    const data = {\n      calculator: \"taylor\",\n      data: { mathequation: textboxval, point: [xval, yval], order: orderval },\n    };\n    console.log(data);\n    fetch(\"/calculator\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLatexAnswer(data);\n        console.log(data);\n      });\n  };\n  return (\n    <div className=\"standard\">\n      <h3>Taylor Polynomial</h3>\n      <input type=\"text\" value={textboxval} placeholder=\"Equation\" onChange={eqchange} />\n      <input\n        type=\"number\"\n        value={xval}\n        placeholder=\"X value\"\n        onChange={(e) => setxval(e.target.value)}\n      />\n      <input\n        type=\"number\"\n        value={yval}\n        placeholder=\"Y value\"\n        onChange={(e) => setyval(e.target.value)}\n      />\n      <input\n        type=\"number\"\n        value={orderval}\n        placeholder=\"Order\"\n        onChange={(e) => setorder(e.target.value)}\n      />\n      <button onClick={sendMath}>Go</button>\n      <MathRenderer mathformula={latexval}></MathRenderer>\n      {latexanswer !== null ? (\n        <>\n          <h1>Taylor Polynomial</h1>\n          <MathRenderer mathformula={latexanswer} />\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default Taylor;\n","import { MouseEventHandler, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport MathRenderer from \"./Components/MathRenderer\";\nimport { parse } from \"mathjs\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport PartialDerivative from \"./partial_derivative\";\nimport Discriminant from \"./Discriminant\";\nimport Derivative from \"./derivative\";\nimport TangentPlane from \"./TangentPlane\";\nimport Taylor from \"./Taylor\";\nfunction App() {\n  const HomePage = () => (\n    <div className=\"standard\">\n      <h1>VCalcs</h1>\n      <Link to=\"/derivative\">\n        <p>Derivative Calculator</p>\n      </Link>\n      <Link to=\"/partial-derivative\">\n        <p>Partial Derivative Calculator</p>\n      </Link>\n      <Link to=\"/discriminant\">\n        <p>Discriminant Calculator</p>\n      </Link>\n      <Link to=\"/tangentplane\">\n        <p>Tangent Plane</p>\n      </Link>\n      <Link to=\"/taylor\">\n        <p>Taylor Polynomial</p>\n      </Link>\n      <Link to=\"/help\">\n        <p className=\"smallerText\">Help?</p>\n      </Link>\n    </div>\n  );\n\n  const Help = () => (\n    <div>\n      <h1>Instructions</h1>\n    </div>\n  );\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/derivative\" component={Derivative} />\n        <Route path=\"/partial-derivative\" component={PartialDerivative} />\n        <Route path=\"/discriminant\" component={Discriminant} />\n        <Route path=\"/tangentplane\" component={TangentPlane} />\n        <Route path=\"/taylor\" component={Taylor} />\n        <Route path=\"/help\" component={Help} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}