{"version":3,"sources":["Components/MathRenderer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MathRenderer","props","blockinline","parse","mathformula","toTex","App","useState","textboxval","setTextBoxVal","className","type","value","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAsBeA,EAjBM,SAACC,GACpB,IAAIC,EACJ,IACEA,EAAcC,YAAMF,EAAMG,aAAaC,QACvC,SACAH,EAAcC,YAAM,SAASE,QAG/B,OACE,8BACE,4BACE,cAAC,OAAD,UAAOH,SCgBAI,MA5Bf,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACNC,EADM,KACMC,EADN,KAEb,OACE,sBAAKC,UAAU,MAAf,UAeE,uBACEC,KAAK,OACLC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAOL,EAAcK,EAAEC,OAAOH,UAE1C,cAAC,EAAD,CAAcR,YAAaI,QCblBQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7676f756.chunk.js","sourcesContent":["// App.js\nimport React from \"react\";\nimport { parse } from \"mathjs\";\nimport { Node } from \"@nteract/mathjax\";\n\nconst MathRenderer = (props: any) => {\n  let blockinline: string;\n  try {\n    blockinline = parse(props.mathformula).toTex();\n  } catch {\n    blockinline = parse(`error`).toTex();\n  }\n\n  return (\n    <div>\n      <p>\n        <Node>{blockinline}</Node>\n      </p>\n    </div>\n  );\n};\n\nexport default MathRenderer;\n","import { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport MathRenderer from \"./Components/MathRenderer\";\nfunction App() {\n  const [textboxval, setTextBoxVal] = useState(\"\");\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <input\n        type=\"text\"\n        value={textboxval}\n        onChange={(e) => setTextBoxVal(e.target.value)}\n      />\n      <MathRenderer mathformula={textboxval}></MathRenderer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}